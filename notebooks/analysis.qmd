---
title: "Depression among patients living with diabetes - Analysis"
format: docx
table-of-contents: true
editor: visual
fontfamily: "Times New Roman"
fontsize: 12pt
---

```{r import-libraries}
pacman::p_load(
  tidyverse, # Data manipulation and visualisation
  gtsummary, # Summary and regression tables
  finalfit, # Modelling
  rio, # Import data
  here, # File management
  skimr, # Skim dataset
  broom, # Tidy output
  car, # Variance inflation factor
  rstatix, # Pipe friendly statistical test
  GGally # Correlation matrix
)
```

# Introduction


```{r import-dataset}
# Import datasets
df <- import(here("data", "clean_data.RData"), trust = TRUE) # Full dataset
demographics <- import(here("data", "demos.RData"), trust = TRUE) # Demographics subset
depress <- import(here("data", "depression.RData"), trust = TRUE) # Depression subset
fam_func <- import(here("data", "family.RData"), trust = TRUE) # Family functionality
health <- import(here("data", "health.RData"), trust = TRUE) # Health characteristics 
```

```{r skim-data}
skim(df)
```

## Normality test

```{r shapiro-wilk-test}
# Create function
shapiro_test <- function(x) {
  shapiro_resut <- shapiro.test(x)
  return(shapiro_resut$p.value)
}

# Extract numeric variables
numeric_vars <- df |>
  select_if(is.numeric)

# Apply function to numeric variables
shapiro_p_values <- numeric_vars |>
  summarise(across(everything(), ~ shapiro_test(.))) |>
  pivot_longer(everything(), names_to = "Variable", values_to = "P values")

# Print shapiro_result
print(shapiro_p_values)
```

***

# Descriptive and Inferential statistics

```{r categorical_variables}
# Categorical variables
categorical_vars <- df |> 
  select_if(is.factor)

categorical_variables <- categorical_vars |>
  select(-c(id))

colnames(categorical_variables)[]
```
```{r eval=FALSE}
#  cat <-  "sex"                          "education"                   
#   "marital_status"               "religious_background"        
#  "employment_status"            "place_of_permanent_residence"
#  "monthly_income"               "duration_diabetes_cat"       
#  "treatment_diabetes"           "ff1"                         
# "ff2"                          "ff3"                         
# "ff4"                          "ff5"                         
# "phq1"                         "phq2"                        
# "phq3"                         "phq4"                        
# "phq5"                         "phq6"                        
# "phq7"                         "phq8"                        
# "phq9"                         "functionality_cat"           
# "depression_cat"   
```

## Demographics

```{r descriptives}
# Demographics
demographics |>
  tbl_summary(
    missing_text = "Missing",
    sort = list(c(marital_status, religious_background,
                  employment_status) ~ "frequency")
)|>
  bold_labels() |>
  add_ci(include=c(
    "sex","education","marital_status","religious_background","employment_status", "place_of_permanent_residence", "monthly_income", "hbaic_cat", "functionality_cat", "depression_cat"
  ))
```

## Health characteristics

```{r health}
# Health data
health |>
  select(-c(sex)) |>
  tbl_summary(
    missing_text = "Missing",
    sort = list(c(treatment_diabetes) ~ "frequency"
  ) )|>
    bold_labels() |>
    add_ci(include=c("bmi_cat", "bp_cat", "whr_cat", "treatment_diabetes"))
  
```


## Depression 

```{r}
# Depression data
depress |>
  select(-c(sex)) |>
  tbl_summary(
  ) |>
  add_ci() |>
  bold_labels()
```



## Family functionality

```{r describe-family-functionality}
# Family functionality
fam_func |>
  select(-c(sex)) |>
  tbl_summary() |>
  bold_labels() |>
  add_ci()
```



## Demographics stratified by HBA1C


```{r demo-hbaic}
# Demographics by HBA1C outcome
demographics |>
  tbl_summary(by = hbaic_cat) |>
  add_p() |>
  bold_p() |>
  bold_labels()
  
```


## Demographics stratified by family functionality

```{r demo-func}
# Demographics by family functionality
demographics |>
  tbl_summary(by = functionality_cat) |>
  add_p() |>
  bold_p() |>
  bold_labels()
```


## Demographics stratified by depression

```{r demo-depression}
# Demographics by depression
demographics |>
  tbl_summary(by = depression_cat) |>
  add_p() |>
  bold_p() |>
  bold_labels()
```

## Health characteristics stratified by HBA1C outcome

```{r health-hbaic}
# Health characteristics by HBA1C outcome
health |>
  tbl_summary(by = hbaic_cat) |>
  add_p() |>
  bold_p() |>
  bold_labels()
```

## Health characteristics stratified by family functionality


```{r health-func}
# Health characteristics by family functionality
health |>
  tbl_summary(by = functionality_cat) |>
  add_p() |>
  bold_p() |> bold_labels()
```

## Health characteristics stratified by depression outcome

```{r health-depression}
# Health characteristics by depression
health |>
  tbl_summary(by = depression_cat) |>
  add_p() |>
  bold_p() |> bold_labels()
```
# Logistic regression

## Multicolinearity

```{r}
# Convert categorical outcome variable to numeric (binary encoding)
df <- df |>
  mutate(
    hbaic_cat_binary = 
      ifelse(hbaic_cat == "Good control", 0, 1),
    fam_func_binary = 
      ifelse(functionality_cat == "Highly functional", 0, 1),
    depression_binary =
      ifelse(
        depression_cat == "Normal", 0, 1
      )
  )
```


```{r multi-co}
dependent_hb <- "hbaic_cat_binary"
dependent_ff <- "fam_func_binary"
dependent_dep <- "depression_binary"

explanatory <- c(
"sex",                        
"age",                       
"education",                   
"marital_status",              
"religious_background",        
"employment_status",           
"place_of_permanent_residence",
"monthly_income",              
"body_weight",                 
"height",                      
"waist_circumference",         
"hip_circumference",   
"sbp",
"dbp",
"duration_diabetes",
"treatment_diabetes" 
)
```

## Multicollinearity: HBA1C

```{r vif-hbaic}
# Variance inflation factor for HBA1C outcome
df |>
  glmmulti(
    dependent_hb, explanatory
  ) |> car::vif()
```



## Multicollinearity: Family functionality

```{r vif-ff}
# Variance inflation factor for family functionality outcome
df |>
  glmmulti(
    dependent_ff, explanatory
  ) |> car::vif()
```




## Multicollinearity: Depression


```{r vif-dep}
# Variance inflation factor for depression outcome
df |>
  glmmulti(
    dependent_dep, explanatory
  ) |> car::vif()
```


## Correlation between numeric variables

```{r corr-numeric}
df |>
  select_if(is.numeric) |>
  ggcorr(label = TRUE)
```


## Univariate models: HBA1C


```{r hbaic-univariate}
# Sex model
sex_model <- glm(hbaic_cat_binary ~ sex, data = df, family = binomial)

# Age model
age_model <- glm(hbaic_cat_binary ~ age, data = df, family = binomial)

# Educational status
education_model <- glm(hbaic_cat_binary ~ education, data = df, family = binomial)

# Marital status
marital_model <- glm(hbaic_cat_binary ~ marital_status, data = df, family = binomial)

# Religious background
religion_model <- glm(hbaic_cat_binary ~ religious_background, data = df, family = binomial)

# Employment status
employment_model <- glm(hbaic_cat_binary ~ employment_status, data = df, family = binomial)

# Place of permanent residence
permanent_model <- glm(hbaic_cat_binary ~ place_of_permanent_residence, data = df, family = binomial)

# Monthly income
income_model <- glm(hbaic_cat_binary ~ monthly_income, data = df, family = binomial)

# Waist circumference
waist_model <- glm(hbaic_cat_binary ~ waist_circumference, data = df, family = binomial)

# Hip circumference
hip_model <- glm(hbaic_cat_binary ~ hip_circumference , data = df, family = binomial)

# Systolic blood pressure
sbp_model <- glm(hbaic_cat_binary ~ sbp, data = df, family = binomial)

# Diastolic blood pressure
dbp_model <- glm(hbaic_cat_binary ~ dbp, data = df, family = binomial)

# Duration of diabetes
duration_model <- glm(hbaic_cat_binary ~ duration_diabetes, data = df, family = binomial)

# Treatment of diabetes
treatment_model <- glm(hbaic_cat_binary ~ treatment_diabetes, data = df, family = binomial)

# BMI category
bmi_model <- glm(hbaic_cat_binary ~ bmi_cat, data = df, family = binomial)

# Blood pressure category
bpcat_model <- glm(hbaic_cat_binary ~ bp_cat, data = df, family = binomial) 
```

```{r univariate-table-hbaic}
# Sex model
th1 <- sex_model |>
  tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Age model
th2 <- age_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()
  

# Educational status
th3 <- education_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Marital status
th4 <- marital_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Religious background
th5 <- religion_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Employment status
th6 <- employment_model|> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Place of permanent residence
th7 <- permanent_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Monthly income
th8 <- income_model|> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Waist circumference
th9 <- waist_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Hip circumference
th10 <- hip_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Systolic blood pressure
th11 <- sbp_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Diastolic blood pressure
th12 <- dbp_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Duration of diabetes
th13 <- duration_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Treatment of diabetes
th14 <- treatment_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# BMI category
th15 <- bmi_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Blood pressure category
th16 <- bpcat_model |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

uni_th <- tbl_stack(list(th1, th2, th3, th4, th5, th6, th7, th8, th9, th10, th11, th12, th13, th14, th15, th16))

uni_th
```

### Multiple logisitic: HBA1C

```{r full-model-hbaic}
# full_model <- glm(hbaic_cat_binary ~ sex + age + education +
#                      marital_status +
#                      religious_background +
#                      employment_status +
#                      place_of_permanent_residence +
#                      monthly_income +
#                      sbp +
#                      dbp +
#                      waist_circumference +
#                      hip_circumference +
#                      duration_diabetes +
#                      treatment_diabetes,
#                    data = df,
#                    family = binomial
#                      )

full_model <- glm(hbaic_cat_binary ~ age + bp_cat + bmi_cat +
                     duration_diabetes,
                   data = df,
                   family = binomial
                     )

full_th <- full_model |>
  tbl_regression(
    exponentiate = TRUE
  ) |> bold_p() |>
  bold_labels()

full_th
```



```{r final-model-step}
final_model_th <- full_model|>
  step(direction = "forward", trace = FALSE)

final_model_th |>
  tbl_regression(
    exponentiate = TRUE
  ) |> bold_p() |>
  bold_labels()

final_model_th
```


```{r combine-uni-multi-hbaic}
# Combine univariate and multiple logistic regression tables
tbl_merge(list(uni_th, full_th), tab_spanner = c(
  "**Univariate regression**", "**Multivariable regression**"
))
```

## Model selection: HBA1C

```{r model-selection-hbaic, eval=FALSE, echo=FALSE, warning=FALSE, message=FALSE}
#| message: false
#| warning: false
explanatory_multi_h <- c(
"age",
"bp_cat",
"bmi_cat",
"duration_diabetes"
)

# "bp_cat",           
# "duration_diabetes",
# "bmi_cat"
df |>
  finalfit.glm(dependent=dependent_hb, explanatory, explanatory_multi_h, keep_models = TRUE, metrics = TRUE) 

```


## Univariate models: family functionality


```{r univariate-ff}
# Sex model
sex_model1 <- glm(fam_func_binary ~ sex, data = df, family = binomial)

# Age model
age_model1 <- glm(fam_func_binary  ~ age, data = df, family = binomial)

# Educational status
education_model1 <- glm(fam_func_binary  ~ education, data = df, family = binomial)

# Marital status
marital_model1 <- glm(fam_func_binary  ~ marital_status, data = df, family = binomial)

# Religious background
religion_model1 <- glm(fam_func_binary  ~ religious_background, data = df, family = binomial)

# Employment status
employment_model1 <- glm(fam_func_binary  ~ employment_status, data = df, family = binomial)

# Place of permanent residence
permanent_model1 <- glm(fam_func_binary  ~ place_of_permanent_residence, data = df, family = binomial)

# Monthly income
income_model1 <- glm(fam_func_binary  ~ monthly_income, data = df, family = binomial)

# Waist circumference
waist_model1 <- glm(fam_func_binary  ~ waist_circumference, data = df, family = binomial)

# Hip circumference
hip_model1 <- glm(fam_func_binary  ~ hip_circumference , data = df, family = binomial)

# Systolic blood pressure
sbp_model1 <- glm(fam_func_binary  ~ sbp, data = df, family = binomial)

# Diastolic blood pressure
dbp_model1 <- glm(fam_func_binary  ~ dbp, data = df, family = binomial)

# Duration of diabetes
duration_model1 <- glm(fam_func_binary  ~ duration_diabetes, data = df, family = binomial)

# Treatment of diabetes
treatment_model1 <- glm(fam_func_binary  ~ treatment_diabetes, data = df, family = binomial)

# BMI category
bmi_model1 <- glm(fam_func_binary ~ bmi_cat, data = df, family = binomial)

# Blood pressure category
bpcat_model1 <- glm(fam_func_binary ~ bp_cat, data = df, family = binomial) 
```



```{r univariatetable-ff}
# Sex model
tf1 <- sex_model1 |>
  tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Age model
tf2 <- age_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()
  

# Educational status
tf3 <- education_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Marital status
tf4 <- marital_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Religious background
tf5 <- religion_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Employment status
tf6 <- employment_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Place of permanent residence
tf7 <- permanent_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Monthly income
tf8 <- income_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Waist circumference
tf9 <- waist_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Hip circumference
tf10 <- hip_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Systolic blood pressure
tf11 <- sbp_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Diastolic blood pressure
tf12 <- dbp_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Duration of diabetes
tf13 <- duration_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Treatment of diabetes
tf14 <- treatment_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# BMI category
tf15 <- bmi_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Blood pressure category
tf16 <- bpcat_model1 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

uni_tf <- tbl_stack(list(tf1, tf2, tf3, tf4, tf5, tf6, tf7, tf8, tf9, tf10, tf11, tf12, tf13, tf14, tf15, tf16))

uni_tf
```


## Multiple logistic: Family functionality



```{r multiple-logistic-func}
full_model1 <- glm(fam_func_binary ~ sex + age +
                     bp_cat +
                     monthly_income +
                     marital_status +
                     duration_diabetes +
                     bmi_cat,
                   data = df,
                   family = binomial
                     )

# "bp_cat",
# "age",
# "sex",
# "marital_status",
# "bmi_cat",
# "monthly_income",
# "duration_diabetes"

full_tf <- full_model1 |>
  tbl_regression(
    exponentiate = TRUE
  ) |> bold_p() |>
  bold_labels()

full_tf
```



```{r full-model-functionality}
final_model_tf <- full_model1|>
  step(direction = "forward", trace = FALSE)

final_model_tf |>
  tbl_regression(
    exponentiate = TRUE
  ) |> bold_p() |>
  bold_labels()

final_model_tf
```

## Model selection: Family functionality

```{r model-selection-family-functionality}
#| message: false
#| warning: false
explanatory_multi_f <- c(
"bp_cat",
"age",
"sex",
"marital_status",
"bmi_cat",
"monthly_income",
"duration_diabetes"
)


# "sex",
# "age",
# "education",
# "marital_status",
# "religious_background",
# "employment_status",
# "place_of_permanent_residence",
# "monthly_income",
# "body_weight",
# "height",
# "waist_circumference",
# "hip_circumference",
# "sbp",
# "dbp",
# "duration_diabetes",
# "treatment_diabetes"

df |>
  finalfit.glm(dependent=dependent_ff, explanatory, explanatory_multi_f, keep_models = TRUE, metrics = TRUE) 
```


```{r combine-uni-multi-ff}
# Combine univariate and multiple logistic regression tables
tbl_merge(list(uni_tf, full_tf), tab_spanner = c(
  "**Univariate regression**", "**Multivariable regression**"
))
```



## Univariate models: Depression


```{r univariate-depression}
# Sex model
sex_model2 <- glm(depression_binary ~ sex, data = df, family = binomial)

# Age model
age_model2 <- glm(depression_binary  ~ age, data = df, family = binomial)

# Educational status
education_model2 <- glm(depression_binary  ~ education, data = df, family = binomial)

# Marital status
marital_model2 <- glm(depression_binary  ~ marital_status, data = df, family = binomial)

# Religious background
religion_model2 <- glm(depression_binary  ~ religious_background, data = df, family = binomial)

# Employment status
employment_model2 <- glm(depression_binary  ~ employment_status, data = df, family = binomial)

# Place of permanent residence
permanent_model2 <- glm(depression_binary  ~ place_of_permanent_residence, data = df, family = binomial)

# Monthly income
income_model2 <- glm(depression_binary  ~ monthly_income, data = df, family = binomial)

# Waist circumference
waist_model2 <- glm(depression_binary  ~ waist_circumference, data = df, family = binomial)

# Hip circumference
hip_model2 <- glm(depression_binary  ~ hip_circumference , data = df, family = binomial)

# Systolic blood pressure
sbp_model2 <- glm(depression_binary  ~ sbp, data = df, family = binomial)

# Diastolic blood pressure
dbp_model2 <- glm(depression_binary  ~ dbp, data = df, family = binomial)

# Duration of diabetes
duration_model2 <- glm(depression_binary  ~ duration_diabetes, data = df, family = binomial)

# Treatment of diabetes
treatment_model2 <- glm(depression_binary ~ treatment_diabetes, data = df, family = binomial)
```


```{r univariate-table-depression}
# Sex model
td1 <- sex_model2 |>
  tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Age model
td2 <- age_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()
  

# Educational status
td3 <- education_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Marital status
td4 <- marital_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Religious background
td5 <- religion_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Employment status
td6 <- employment_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Place of permanent residence
td7 <- permanent_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Monthly income
td8 <- income_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Waist circumference
td9 <- waist_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Hip circumference
td10 <- hip_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Systolic blood pressure
td11 <- sbp_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Diastolic blood pressure
td12 <- dbp_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Duration of diabetes
td13 <- duration_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

# Treatment of diabetes
td14 <- treatment_model2 |> tbl_regression(
    exponentiate = TRUE
  ) |>
  bold_p() |>
  bold_labels()

uni_td <- tbl_stack(list(td1, td2, td3, td4, td5, td6, td7, td8, td9, td10, td11, td12, td13, td14))

uni_td
```


```{r full-model-depression}
full_model2 <- glm(depression_binary ~ sex + age + education +
                     marital_status +
                     religious_background +
                     employment_status +
                     place_of_permanent_residence +
                     monthly_income +
                     sbp +
                     dbp +
                     waist_circumference +
                     hip_circumference +
                     duration_diabetes +
                     treatment_diabetes,
                   data = df,
                   family = binomial
                     )

full_td <- full_model2 |>
  tbl_regression(
    exponentiate = TRUE
  ) |> bold_p() |>
  bold_labels()

full_td
```



```{r}
final_model_td <- full_model1|>
  step(direction = "forward", trace = FALSE)

final_model_td |>
  tbl_regression(
    exponentiate = TRUE
  ) |> bold_p() |>
  bold_labels()

final_model_td
```





